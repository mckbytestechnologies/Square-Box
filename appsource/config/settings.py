"""
Django settings for velloreland project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


import os
import sys
import logging.config
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.insert(0, str(BASE_DIR))

# Quick-start development settings - unsuitable for production
SECRET_KEY = 'django-insecure-adkq2p-(e(l)7xqztab_j@)x0)eu2nr@vi&6@))gz^1u&owj#-'
DEBUG = True
ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    'crispy_forms',
    'crispy_bootstrap5',
    'mck_master',
    'mck_auth',
    'mck_admin_console',
    'mck_website',
    'squarebox',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  
    'mck_auth.middleware.AdminAccessMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'mck_website', 'templates', 'pages'),
            os.path.join(BASE_DIR, 'mck_website', 'templates', 'layouts'),
            os.path.join(BASE_DIR, 'mck_admin_console', 'templates', 'pages'),
            os.path.join(BASE_DIR, 'mck_admin_console', 'templates', 'layouts'),
            os.path.join(BASE_DIR, 'mck_admin_console', 'templates', 'includes'),
            os.path.join(BASE_DIR, 'mck_auth', 'templates', 'common'),
            os.path.join(BASE_DIR, 'mck_custom', 'templates', 'layouts'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'mck_squarebox.sqlite3'),
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'
USE_I18N = True
USE_TZ = False
DEFAULT_DATE_TIME_FORMAT = '%d %b, %Y %I:%M:%S %p'
DEFAULT_DATE_FORMAT = '%d %b, %Y'
DEFAULT_TIME_FORMAT = '%I:%M:%S %p'

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # For production
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Your main static directory
    os.path.join(BASE_DIR, 'mck_website', 'static'),  # App-specific static files
]


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = "/site-media/"
MEDIA_STATIC_ROOT = os.path.join(BASE_DIR, 'media', 'static')
MEDIA_STATIC_URL = "/app-static/"

STATIC_ROOT = os.path.join(BASE_DIR, 'media', 'static')

# # Media files (user uploaded content)
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_ROOT = "G:/square_box/appsource/media"


# MEDIA_STATIC_ROOT = os.path.join(BASE_DIR, 'media', 'static')

# # Static files storage (for production)
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_STATIC_URL = "/app-static/"

# Security settings
SECURE_CROSS_ORIGIN_OPENER_POLICY = None
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


APP_LOGGING_CONFIG = "logging.config.dictConfig"
APP_LOGGING_LEVEL = "DEBUG"


# Logging configuration (unchanged from your original)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {'format': '%(asctime)s %(levelname)s %(message)s'},
        'simple':  {'format': '%(levelname)s %(message)s'},
    },
    'handlers': {
        'app_scripts':{
            'level': 'DEBUG',
            'class':'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'verbose',
            'filename': os.path.join(BASE_DIR, 'logs', 'app_scripts.log'),
            'when': 'D',
            'interval': 1,
            'backupCount': 3
        },
        'app':{
            'level':'DEBUG',
            'class':'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'verbose',
            'filename': os.path.join(BASE_DIR, 'logs', 'app.log'),
            'when': 'D',
            'interval': 1,
            'backupCount': 3
        },
        'app_threads':{
            'level':'DEBUG',
            'class':'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'verbose',
            'filename': os.path.join(BASE_DIR, 'logs', 'app_threads.log'),
            'when': 'D',
            'interval': 1,
            'backupCount': 3
        },
    },
    'loggers': {
        'app_scripts':{'handlers':['app_scripts'],'level': APP_LOGGING_LEVEL,'propagate': False,},
        'app':{'handlers':['app'],'level': APP_LOGGING_LEVEL,'propagate': False,},
        'app_threads':{'handlers':['app_threads'],'level': APP_LOGGING_LEVEL,'propagate': False,},

     }
}

logging.config.dictConfig(LOGGING)

# Authentication
AUTH_USER_MODEL = 'mck_auth.User'
AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']
LOGIN_REDIRECT_URL = "/auth/login/"

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'bharathmckbytes@gmail.com'
# EMAIL_HOST_PASSWORD = 'nlwyargkfxqeynjw'  # Use App Password, not your main password
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# ADMIN_EMAIL = 'admin@example.com'
